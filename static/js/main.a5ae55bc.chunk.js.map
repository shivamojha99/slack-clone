{"version":3,"sources":["StateProvider.js","Header.js","firebase.js","Sidebar_options.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayName","src","photoURL","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Sidebar_options","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkIcon","PeopleAltIcon","AppsIcon","AddIcon","channel","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","ChannelName","ChannelId","input","setInput","onChange","e","target","toLowerCase","type","preventDefault","console","log","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","Message","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5ae55bc.chunk.js","sourcesContent":["import React,{createContext, useContext, useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider =({reducer, initialState, children}) =>(\r\n    <StateContext.Provider value ={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext)","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport \"./Header.css\";\r\nimport { useStateValue } from './StateProvider';\r\nfunction Header() {\r\n    const [{user}]= useStateValue();\r\n    return (\r\n        <div className=\"header\">\r\n        <div className=\"header_left\">\r\n            <Avatar\r\n            className=\"header_avatar\"\r\n            alt={user?.displayName}\r\n            src={user?.photoURL}\r\n            />\r\n            <AccessTimeIcon/>\r\n        </div>\r\n\r\n        <div className=\"header_search\">\r\n            <SearchIcon/>\r\n            <input placeholder=\"Search Codechamps\"/>\r\n        </div>\r\n        <div className=\"header_right\">\r\n            <HelpOutlineIcon/>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\"\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgSxUoj8Q3jrhEKbzvEG7p04WPE0ii-ss\",\r\n    authDomain: \"slack-clone-ded42.firebaseapp.com\",\r\n    databaseURL: \"https://slack-clone-ded42.firebaseio.com\",\r\n    projectId: \"slack-clone-ded42\",\r\n    storageBucket: \"slack-clone-ded42.appspot.com\",\r\n    messagingSenderId: \"614401064737\",\r\n    appId: \"1:614401064737:web:632a936770407017ec8860\",\r\n    measurementId: \"G-ZYDCLYB3ED\"\r\n  };\r\n\r\n  const firebaseApp= firebase.initializeApp(firebaseConfig)\r\n  const db=firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export{auth,provider};\r\n  export default db;","import React from 'react'\r\nimport './sidebaroption.css'\r\nimport db from './firebase'\r\nimport {useHistory} from \"react-router-dom\";\r\nfunction Sidebar_options({Icon,title,id,addChannelOption,}) {\r\n    const history= useHistory();\r\n    const selectChannel =() =>{\r\n        if(id)\r\n        {\r\n            history.push(`/room/${id}`)\r\n        }else{\r\n            history.push('title')\r\n        }\r\n    }\r\n    const addChannel=()=>{\r\n        const channelName=prompt('Please enter the channel Name')\r\n        if(channelName)\r\n        {\r\n            db.collection(\"rooms\").add({\r\n                name:channelName,\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"sidebaroption\" onClick={addChannelOption ? addChannel : selectChannel}>\r\n            \r\n            {Icon && <Icon className=\"sidebaroption_icon\"/>}\r\n\r\n            {Icon ? \r\n            (\r\n                <h3>{title}</h3>\r\n            ):(\r\n                <h3 className=\"sidebaroption_channel\">\r\n                  <span className=\" sidebaroption_hash\">#</span> {title}\r\n                </h3>\r\n\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar_options\r\n","import React,{useState,useEffect} from 'react'\r\nimport  \"./Sidebar.css\"\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\r\nimport CreateIcon from \"@material-ui/icons/Create\"\r\nimport Sidebar_options from './Sidebar_options';\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\"\r\nimport InboxIcon from \"@material-ui/icons/Inbox\"\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\"\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\"\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\"\r\nimport AppsIcon from \"@material-ui/icons/Apps\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const[channels,setChannels]=useState([]);\r\n    const [{user}]= useStateValue();\r\n    useEffect(()=>{\r\n        db.collection(\"rooms\").onSnapshot(snapshot=>(\r\n            setChannels(\r\n                snapshot.docs.map(doc=>({\r\n                    id:doc.id,\r\n                    name:doc.data().name,      \r\n                }))\r\n            )\r\n        ))\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <div className=\"sidebar_info\">\r\n                    <h2>CodeChamps</h2>\r\n                    <h3>\r\n                    <FiberManualRecordIcon/>\r\n                    {user?.displayName}\r\n                    </h3>\r\n                </div>\r\n                <CreateIcon/>\r\n               \r\n            </div>\r\n            <Sidebar_options Icon={InsertCommentIcon} title=\"shivam\" />\r\n            <Sidebar_options  title=\"Youtube Channel\" />\r\n            <Sidebar_options Icon={InboxIcon} title=\"Inbox\" />\r\n            <Sidebar_options Icon={DraftsIcon} title=\"Drafts\" />\r\n            <Sidebar_options Icon={BookmarkIcon} title=\"Bookmark\" />\r\n            <Sidebar_options Icon={PeopleAltIcon} title=\"People\" />\r\n            <Sidebar_options Icon={AppsIcon} title=\"Apps\" />\r\n            <Sidebar_options Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n            {channels.map(channel=>(\r\n                    <Sidebar_options title={channel.name} id={channel.id}/> \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './message.css'\r\nfunction message({message,timestamp,user,userImage}) {\r\n    return (\r\n        <div className=\"message\">\r\n             <img src={userImage} alt=\"\"/>\r\n             <div className=\"message_info\">\r\n                 <h4>\r\n                     {user}\r\n                      <span className=\"message_timestamp\">\r\n                         {new Date(timestamp?.toDate()).toUTCString()}\r\n                         </span>\r\n                 </h4>\r\n                 <p>\r\n                     {message}\r\n                 </p>\r\n\r\n             </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default message\r\n\r\n\r\n","import { Button } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport \"./ChatInput.css\"\r\nimport db from './firebase';\r\nimport firebase from \"firebase\"\r\nimport {useStateValue} from \"./StateProvider\"\r\n\r\nfunction ChatInput({ChannelName, ChannelId}) {\r\n   const [input,setInput]= useState(\"\");\r\n   const [{user}]=useStateValue();\r\n    const sendMessage = (e)=>{\r\n            e.preventDefault();\r\n\r\n    console.log(ChannelId)\r\n    if(ChannelId)\r\n    {\r\n        db.collection(\"rooms\").doc(ChannelId).collection(\"messages\").add({\r\n            message:input,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n            user:user.displayName,\r\n            userImage:user.photoURL,\r\n        });\r\n\r\n    } setInput(\"\");\r\n}\r\n    return (\r\n        <div className=\"chatInput\">\r\n            <form>\r\n                <input\r\n                value={input}\r\n                onChange={e=> setInput(e.target.value)}\r\n                placeholder={`Message# ${ChannelName?.toLowerCase()}`}/>\r\n                <button type=\"submit\" onClick={sendMessage}>SEND</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n"," import React, { useState,useEffect } from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport \"./Chat.css\"\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\"\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\"\r\nimport db from './firebase';\r\nimport Message from \"./Message\"\r\nimport ChatInput from './ChatInput';\r\n\r\nfunction Chat() {\r\n    const {roomId} = useParams();\r\n    const [roomDetails,setRoomDetails]=useState(null);\r\n    const [roomMessages,setRoomMessages]=useState([]);\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .onSnapshot((snapshot )  =>\r\n            (setRoomDetails(snapshot.data())\r\n            ))\r\n        }\r\n\r\n        db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\",\"asc\")\r\n        .onSnapshot((snapshot)=>setRoomMessages(snapshot.docs.map(doc=>doc.data())))\r\n    },[roomId]);\r\n\r\n    console.log(roomDetails);\r\n    return (\r\n        <div  className=\"chat\">\r\n        \r\n            <div className=\"chat_header\">\r\n                <div className=\"chat_headerLeft\">\r\n                    <h4 className=\"chat_channelName\">\r\n    <strong># {roomDetails?.name}</strong>\r\n                        <StarBorderOutlinedIcon/>\r\n                    </h4>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <p>\r\n                        <InfoOutlinedIcon/> Details\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_messages\" >\r\n            {roomMessages.map(({message,timestamp,user,userImage })=>(\r\n                <Message\r\n                message={message}\r\n                timestamp={timestamp}\r\n                user={user}\r\n                userImage={userImage}/>\r\n            ))}\r\n            {console.log(`Here is the id${roomId}`)}\r\n            {console.log(`Here is the Room NAME ${roomDetails?.name}`)}\r\n<ChatInput ChannelName ={roomDetails?.name} ChannelId={roomId}/>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\n\r\n","export const initialState ={\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER:\"SET_USER\",\r\n};\r\n\r\nconst reducer =(state,action)=>{\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user:action.user\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React,{useState} from 'react'\r\nimport \"./login.css\"\r\nimport {Button }from \"@material-ui/core\"\r\nimport { auth, provider } from './firebase'\r\nimport { useStateValue } from './StateProvider'\r\nimport { actionTypes } from './reducer'\r\n\r\nfunction Login() {\r\n  const[state, dispatch]= useStateValue();\r\n    const SignIn = () =>{\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then(result =>{\r\n            console.log(result)\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user:result.user\r\n\r\n            })\r\n        } )\r\n        .catch(error =>{\r\n            alert(error.message);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img\r\n                src=\"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\"\r\n                alt=\"\"\r\n             />\r\n             <h1> Sign in to CodeChamps HQ</h1>\r\n             <p> CodeChamps.slack.com</p>\r\n             <Button onClick={SignIn}>Sign in with GOOGLE</Button>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"; \nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\nfunction App() {\n  \n  const [{user}, dispatch]=useStateValue();\n  return (\n    <div className=\"App\">\n     <Router>\n      {!user?(<Login/>)\n      :(<>\n        <Header/>\n        <div className=\"app_body\">\n         <Sidebar/>\n         <Switch>\n           <Route path=\"/room/:roomId\">\n            \n             <Chat/>\n           </Route>\n           <Route path=\"/\">\n             <h1>Welcome </h1>\n           </Route>\n   \n         </Switch>\n        </div>  \n        </> \n      )\n      }\n\n     \n\n     </Router>\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n      </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}